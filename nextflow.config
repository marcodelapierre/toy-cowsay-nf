manifest {
  author = 'Marco De La Pierre'
  name = 'toy-cowsay-nf'
  description = 'Toy pipeline for simple Nextflow tests'
  homePage = 'https://github.com/marcodelapierre/toy-cowsay-nf'

  nextflowVersion = '!>=22.04.0'
}

profiles {

singularity {
  process.container = 'quay.io/marcodelapierre/cowsay:2023.01'
  singularity.enabled = true
}
docker {
  process.container = 'quay.io/marcodelapierre/cowsay:2023.01'
  docker.enabled = true
}
podman {
  process.container = 'quay.io/marcodelapierre/cowsay:2023.01'
  podman.enabled = true
}

conda {
  process.conda = 'conda-forge::cowpy'
  conda.enabled = true
}
condayaml {
  process.conda = 'conda.yaml'
  conda.enabled = true
}
condawave {
  process.conda = 'conda-forge::cowpy'
  docker.enabled = true
  wave {
    strategy = ['conda']
    enabled = true
  }
  tower.accessToken = "$TOWER_ACCESS_TOKEN"
}
condawavesing {
  process.conda = 'conda-forge::cowpy'
  singularity.enabled = true
  wave {
    strategy = ['conda']
    enabled = true
  }
  tower.accessToken = "$TOWER_ACCESS_TOKEN"
}

spack {
  process.spack = 'cowsay nano ^ncurses abi=5'
  spack.enabled = true
}
spackyaml {
  process.spack = 'spack.yaml'
  spack.enabled = true
}
spackwave {
  process.spack = 'cowsay'
  docker.enabled = true
  wave {
    strategy = ['spack']
    enabled = true
  }
  tower.accessToken = "$TOWER_ACCESS_TOKEN"
}
spackwaveyaml {
  process.spack = 'spack.yaml'
  docker.enabled = true
  wave {
    strategy = ['spack']
    enabled = true
  }
  tower.accessToken = "$TOWER_ACCESS_TOKEN"
}
spackwaveoptions {
  process.spack = 'cowsay'
  docker.enabled = true
  wave {
    strategy = ['spack']
    enabled = true
    build.spack.builderImage = 'spack/ubuntu-focal:v0.19.0'
    build.spack.runnerImage = 'ubuntu:20.04'
    build.spack.osPackages = 'libgomp1 vim'
    build.spack.cFlags = '-O2'
    build.spack.cxxFlags = '-O1'
    build.spack.fFlags = '-O0'
    build.spack.genericTarget = 'x86'
    build.spack.target = 'zen'
    build.spack.commands = [ 'LABEL "zio"="sergio"' ]
  }
  tower.accessToken = "$TOWER_ACCESS_TOKEN"
}

}
